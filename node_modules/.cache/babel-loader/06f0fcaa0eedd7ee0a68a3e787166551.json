{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\soporte.molina03\\\\Documents\\\\gaa\\\\SoyHenryM2\\\\08-React-Estado-LifeCycle\\\\homework\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Card from \"./components/Card\";\nimport Cards from \"./components/Cards\";\nimport data, { Cairns } from \"./data.js\";\nimport Nav from \"./components/Nav\";\nimport { ContainerCards } from \"./styles/Containers.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [cities, setCities] = useState([]);\n\n  function onSearch(cities) {\n    //Acá habría que hacer el llamado a la API para obtener los datos de la ciudad\n    //pero de momento agregaremos una ciudad por default para ver que funcione\n    const ciudadEjemplo = {\n      min: 32,\n      max: 35,\n      img: \"03n\",\n      id: 2172797,\n      wind: 3.6,\n      temp: 300.15,\n      name: \"Cairns\",\n      weather: \"Clouds\",\n      clouds: 40,\n      latitud: -16.92,\n      longitud: 145.77\n    };\n    setCities(oldCities => [...oldCities, ciudadEjemplo]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContainerCards, {\n      children: /*#__PURE__*/_jsxDEV(Cards, {\n        cities: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      max: Cairns.main.temp_max,\n      min: Cairns.main.temp_min,\n      name: Cairns.name,\n      img: Cairns.weather[0].icon,\n      onClose: () => alert(Cairns.name)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"f1nPJs+hrTaAy6BEqAnKgJLvJt4=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Card","Cards","data","Cairns","Nav","ContainerCards","App","cities","setCities","onSearch","ciudadEjemplo","min","max","img","id","wind","temp","name","weather","clouds","latitud","longitud","oldCities","main","temp_max","temp_min","icon","alert"],"sources":["C:/Users/soporte.molina03/Documents/gaa/SoyHenryM2/08-React-Estado-LifeCycle/homework/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Card from \"./components/Card\";\r\nimport Cards from \"./components/Cards\";\r\nimport data, { Cairns } from \"./data.js\";\r\nimport Nav from \"./components/Nav\";\r\nimport { ContainerCards } from \"./styles/Containers.jsx\";\r\n\r\nexport default function App() {\r\n  const [cities, setCities] = useState([]);\r\n  function onSearch(cities) {\r\n    //Acá habría que hacer el llamado a la API para obtener los datos de la ciudad\r\n    //pero de momento agregaremos una ciudad por default para ver que funcione\r\n\r\n    const ciudadEjemplo = {\r\n      min: 32,\r\n      max: 35,\r\n      img: \"03n\",\r\n      id: 2172797,\r\n      wind: 3.6,\r\n      temp: 300.15,\r\n      name: \"Cairns\",\r\n      weather: \"Clouds\",\r\n      clouds: 40,\r\n      latitud: -16.92,\r\n      longitud: 145.77,\r\n    };\r\n    setCities((oldCities) => [...oldCities, ciudadEjemplo]);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Nav />\r\n      <ContainerCards>\r\n        <Cards cities={data} />\r\n      </ContainerCards>\r\n      <Card\r\n        max={Cairns.main.temp_max}\r\n        min={Cairns.main.temp_min}\r\n        name={Cairns.name}\r\n        img={Cairns.weather[0].icon}\r\n        onClose={() => alert(Cairns.name)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,IAAeC,MAAf,QAA6B,WAA7B;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,SAASC,cAAT,QAA+B,yBAA/B;;AAEA,eAAe,SAASC,GAAT,GAAe;EAAA;;EAC5B,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;;EACA,SAASU,QAAT,CAAkBF,MAAlB,EAA0B;IACxB;IACA;IAEA,MAAMG,aAAa,GAAG;MACpBC,GAAG,EAAE,EADe;MAEpBC,GAAG,EAAE,EAFe;MAGpBC,GAAG,EAAE,KAHe;MAIpBC,EAAE,EAAE,OAJgB;MAKpBC,IAAI,EAAE,GALc;MAMpBC,IAAI,EAAE,MANc;MAOpBC,IAAI,EAAE,QAPc;MAQpBC,OAAO,EAAE,QARW;MASpBC,MAAM,EAAE,EATY;MAUpBC,OAAO,EAAE,CAAC,KAVU;MAWpBC,QAAQ,EAAE;IAXU,CAAtB;IAaAb,SAAS,CAAEc,SAAD,IAAe,CAAC,GAAGA,SAAJ,EAAeZ,aAAf,CAAhB,CAAT;EACD;;EAED,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE,QAAC,GAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,cAAD;MAAA,uBACE,QAAC,KAAD;QAAO,MAAM,EAAER;MAAf;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAFF,eAKE,QAAC,IAAD;MACE,GAAG,EAAEC,MAAM,CAACoB,IAAP,CAAYC,QADnB;MAEE,GAAG,EAAErB,MAAM,CAACoB,IAAP,CAAYE,QAFnB;MAGE,IAAI,EAAEtB,MAAM,CAACc,IAHf;MAIE,GAAG,EAAEd,MAAM,CAACe,OAAP,CAAe,CAAf,EAAkBQ,IAJzB;MAKE,OAAO,EAAE,MAAMC,KAAK,CAACxB,MAAM,CAACc,IAAR;IALtB;MAAA;MAAA;MAAA;IAAA,QALF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAeD;;GArCuBX,G;;KAAAA,G"},"metadata":{},"sourceType":"module"}