{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\soporte.molina03\\\\Documents\\\\gaa\\\\SoyHenryM2\\\\08-React-Estado-LifeCycle\\\\homework\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Card from \"./components/Card\";\nimport Cards from \"./components/Cards\";\nimport data, { Cairns } from \"./data.js\";\nimport Nav from \"./components/Nav\";\nimport { ContainerCards } from \"./styles/Containers.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [cities, setCities] = useState([]);\n\n  function onSearch(ciudad) {\n    //Acá habría que hacer el llamado a la API para obtener los datos de la ciudad\n    //pero de momento agregaremos una ciudad por default para ver que funcione\n    fetch(`http://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${apiKey}&units=metric`).then(r => r.json()).then(recurso => {\n      if (recurso.main !== undefined) {\n        const ciudad = {\n          min: Math.round(recurso.main.temp_min),\n          max: Math.round(recurso.main.temp_max),\n          img: recurso.weather[0].icon,\n          id: recurso.id,\n          wind: recurso.wind.speed,\n          temp: recurso.main.temp,\n          name: recurso.name,\n          weather: recurso.weather[0].main,\n          clouds: recurso.clouds.all,\n          latitud: recurso.coord.lat,\n          longitud: recurso.coord.lon\n        };\n        setCities(oldCities => [...oldCities, ciudad]);\n      } else {\n        alert(\"Ciudad no encontrada\");\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContainerCards, {\n      children: /*#__PURE__*/_jsxDEV(Cards, {\n        cities: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      max: Cairns.main.temp_max,\n      min: Cairns.main.temp_min,\n      name: Cairns.name,\n      img: Cairns.weather[0].icon,\n      onClose: () => alert(Cairns.name)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"f1nPJs+hrTaAy6BEqAnKgJLvJt4=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Card","Cards","data","Cairns","Nav","ContainerCards","App","cities","setCities","onSearch","ciudad","fetch","apiKey","then","r","json","recurso","main","undefined","min","Math","round","temp_min","max","temp_max","img","weather","icon","id","wind","speed","temp","name","clouds","all","latitud","coord","lat","longitud","lon","oldCities","alert"],"sources":["C:/Users/soporte.molina03/Documents/gaa/SoyHenryM2/08-React-Estado-LifeCycle/homework/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Card from \"./components/Card\";\r\nimport Cards from \"./components/Cards\";\r\nimport data, { Cairns } from \"./data.js\";\r\nimport Nav from \"./components/Nav\";\r\nimport { ContainerCards } from \"./styles/Containers.jsx\";\r\n\r\nexport default function App() {\r\n  const [cities, setCities] = useState([]);\r\n  function onSearch(ciudad) {\r\n    //Acá habría que hacer el llamado a la API para obtener los datos de la ciudad\r\n    //pero de momento agregaremos una ciudad por default para ver que funcione\r\n\r\n    fetch(\r\n      `http://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${apiKey}&units=metric`\r\n    )\r\n      .then((r) => r.json())\r\n      .then((recurso) => {\r\n        if (recurso.main !== undefined) {\r\n          const ciudad = {\r\n            min: Math.round(recurso.main.temp_min),\r\n            max: Math.round(recurso.main.temp_max),\r\n            img: recurso.weather[0].icon,\r\n            id: recurso.id,\r\n            wind: recurso.wind.speed,\r\n            temp: recurso.main.temp,\r\n            name: recurso.name,\r\n            weather: recurso.weather[0].main,\r\n            clouds: recurso.clouds.all,\r\n            latitud: recurso.coord.lat,\r\n            longitud: recurso.coord.lon,\r\n          };\r\n          setCities((oldCities) => [...oldCities, ciudad]);\r\n        } else {\r\n          alert(\"Ciudad no encontrada\");\r\n        }\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Nav />\r\n      <ContainerCards>\r\n        <Cards cities={data} />\r\n      </ContainerCards>\r\n      <Card\r\n        max={Cairns.main.temp_max}\r\n        min={Cairns.main.temp_min}\r\n        name={Cairns.name}\r\n        img={Cairns.weather[0].icon}\r\n        onClose={() => alert(Cairns.name)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,IAAeC,MAAf,QAA6B,WAA7B;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,SAASC,cAAT,QAA+B,yBAA/B;;AAEA,eAAe,SAASC,GAAT,GAAe;EAAA;;EAC5B,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;;EACA,SAASU,QAAT,CAAkBC,MAAlB,EAA0B;IACxB;IACA;IAEAC,KAAK,CACF,oDAAmDD,MAAO,UAASE,MAAO,eADxE,CAAL,CAGGC,IAHH,CAGSC,CAAD,IAAOA,CAAC,CAACC,IAAF,EAHf,EAIGF,IAJH,CAISG,OAAD,IAAa;MACjB,IAAIA,OAAO,CAACC,IAAR,KAAiBC,SAArB,EAAgC;QAC9B,MAAMR,MAAM,GAAG;UACbS,GAAG,EAAEC,IAAI,CAACC,KAAL,CAAWL,OAAO,CAACC,IAAR,CAAaK,QAAxB,CADQ;UAEbC,GAAG,EAAEH,IAAI,CAACC,KAAL,CAAWL,OAAO,CAACC,IAAR,CAAaO,QAAxB,CAFQ;UAGbC,GAAG,EAAET,OAAO,CAACU,OAAR,CAAgB,CAAhB,EAAmBC,IAHX;UAIbC,EAAE,EAAEZ,OAAO,CAACY,EAJC;UAKbC,IAAI,EAAEb,OAAO,CAACa,IAAR,CAAaC,KALN;UAMbC,IAAI,EAAEf,OAAO,CAACC,IAAR,CAAac,IANN;UAObC,IAAI,EAAEhB,OAAO,CAACgB,IAPD;UAQbN,OAAO,EAAEV,OAAO,CAACU,OAAR,CAAgB,CAAhB,EAAmBT,IARf;UASbgB,MAAM,EAAEjB,OAAO,CAACiB,MAAR,CAAeC,GATV;UAUbC,OAAO,EAAEnB,OAAO,CAACoB,KAAR,CAAcC,GAVV;UAWbC,QAAQ,EAAEtB,OAAO,CAACoB,KAAR,CAAcG;QAXX,CAAf;QAaA/B,SAAS,CAAEgC,SAAD,IAAe,CAAC,GAAGA,SAAJ,EAAe9B,MAAf,CAAhB,CAAT;MACD,CAfD,MAeO;QACL+B,KAAK,CAAC,sBAAD,CAAL;MACD;IACF,CAvBH;EAwBD;;EAED,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE,QAAC,GAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,cAAD;MAAA,uBACE,QAAC,KAAD;QAAO,MAAM,EAAEvC;MAAf;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAFF,eAKE,QAAC,IAAD;MACE,GAAG,EAAEC,MAAM,CAACc,IAAP,CAAYO,QADnB;MAEE,GAAG,EAAErB,MAAM,CAACc,IAAP,CAAYK,QAFnB;MAGE,IAAI,EAAEnB,MAAM,CAAC6B,IAHf;MAIE,GAAG,EAAE7B,MAAM,CAACuB,OAAP,CAAe,CAAf,EAAkBC,IAJzB;MAKE,OAAO,EAAE,MAAMc,KAAK,CAACtC,MAAM,CAAC6B,IAAR;IALtB;MAAA;MAAA;MAAA;IAAA,QALF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAeD;;GA/CuB1B,G;;KAAAA,G"},"metadata":{},"sourceType":"module"}